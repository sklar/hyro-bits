{"version":3,"sources":["../../../src/components/textarea/index.ts","../../../src/components/textarea/textarea.tsx","../../../src/colors/colors.ts","../../../src/utils.ts","../../../src/components/idle/idle.tsx","../../../src/components/idle/idle.styles.ts","../../../src/styles/index.ts","../../../src/styles/animations.ts","../../../src/components/textarea/textarea.styles.ts","../../../src/components/input/input.tsx","../../../src/components/input/input.styles.ts","../../../src/typography/typography.ts"],"sourcesContent":["export { Textarea } from './textarea';\nexport type { TextareaProps } from './textarea';\n\nexport { container, indicator, textarea } from './textarea.styles';\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { ElementType, forwardRef, TextareaHTMLAttributes } from 'react';\n\nimport { colors } from '../../colors';\nimport { InternalHTMLAttributes } from '../../types';\nimport { splitPropsByKeys } from '../../utils';\nimport { Idle as Indicator } from '../idle';\nimport { container, indicator, textarea } from './textarea.styles';\n\nexport interface TextareaProps\n  extends InternalHTMLAttributes,\n    TextareaHTMLAttributes<HTMLTextAreaElement> {\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n\n  /**\n   * Expandable\n   */\n  expandable?: boolean;\n  /**\n   * Length (aka `width`)\n   */\n  length?: string;\n  /**\n   * Resize\n   */\n  resize?: 'both' | 'horizontal' | 'vertical' | 'none';\n  /**\n   * Theme\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * State: Active\n   */\n  active?: boolean;\n  /**\n   * State: Busy\n   */\n  busy?: boolean;\n  /**\n   * State: Disabled\n   */\n  disabled?: boolean;\n  /**\n   * State: Invalid\n   */\n  invalid?: boolean;\n  /**\n   * State: Read-only\n   */\n  readonly?: boolean;\n}\n\n/**\n * Textarea\n */\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      active,\n      as = 'label',\n      busy,\n      className,\n      disabled,\n      expandable,\n      invalid,\n      length,\n      readonly,\n      resize = 'vertical',\n      style,\n      theme,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const [containerProps, textareaProps] = splitPropsByKeys(props, [\n      'data-active',\n      'data-hover',\n      'data-invalid',\n    ]);\n\n    return (\n      <Container\n        {...containerProps}\n        as={as}\n        className={className}\n        data-active={active || null}\n        data-busy={busy || null}\n        data-disabled={disabled || null}\n        data-expandable={expandable || null}\n        data-invalid={invalid || null}\n        data-readonly={readonly || null}\n        data-resize={resize}\n        data-theme={theme || null}\n        data-value={expandable ? textareaProps.value || textareaProps.defaultValue : ''}\n        style={{ ['--input-length' as string]: length, ...style }}\n      >\n        <Element {...textareaProps} ref={ref} disabled={disabled} readOnly={readonly} />\n        {busy && (\n          <Indicator\n            gap=\"2px\"\n            size=\"4px\"\n            data-indicator\n            css={indicator}\n            style={{\n              ['--color' as string]: colors.ELEMENT_PRIMARY,\n            }}\n          />\n        )}\n      </Container>\n    );\n  }\n);\n\nconst Container = styled.label`\n  ${container};\n`;\n\nconst Element = styled.textarea`\n  ${textarea};\n`;\n","/**\n * Color palette.\n * @see http://veli.ee/colorpedia/\n */\nconst palette = {\n  //\n  black: '#000000',\n  //\n  blue: {\n    denim: '#184ece', // focus [dark]\n    dodger: '#3370ff', // focus\n    ebony: '#1f222f', // background / secondary [dark]\n    haiti: '#0f152e', // text\n    hawkes: '#ecf1fe', // secondary\n    oxford: '#3f485e', // active aka selection [dark]\n    ribbon: '#004bff', // primary\n    ribbon1: '#1d61ff', // notice\n    science: '#0041dd', // pressed\n    vulcan: '#131620', // background / primary [dark]\n  },\n  //\n  current: 'currentColor',\n  //\n  gray: {\n    botticelli: '#dbe4ee', // dividers and strokes\n    cadet: '#b4bac8', // tertiary\n    fiord: '#3b4463', // dividers and strokes [dark]\n    geyser: '#ced4e2', // disabled\n    porcelain: '#f6f7f8', // background / secondary\n    trout: '#545864', // disabled [dark]\n    waterloo: '#757c91', // tertiary [dark]\n  },\n  //\n  green: {\n    caribbean: '#07d094', // success\n  },\n  //\n  orange: {\n    amber: '#ffbe0b', // warning\n  },\n  //\n  red: {\n    radical: '#ff3b58', // error\n  },\n  //\n  transparent: 'transparent',\n  //\n  white: '#ffffff', // background / primary\n};\n\n/**\n * Accent colors.\n */\nconst accents = ((c) => {\n  return {\n    DANGER: c.red.radical,\n    NOTICE: c.blue.ribbon1,\n    SUCCESS: c.green.caribbean,\n    WARNING: c.orange.amber,\n  };\n})(palette);\n\n/**\n * Neutral colors.\n */\n// const neutrals = ((c) => {\n//   return {};\n// })(palette);\n\n/**\n * Token colors.\n */\nconst tokens = ((c) => {\n  return {\n    PRIMARY: c.blue.ribbon,\n    SECONDARY: c.blue.hawkes,\n    TERTIARY: c.gray.cadet,\n    BACKGROUND_PRIMARY: c.white,\n    BACKGROUND_SECONDARY: c.gray.porcelain,\n    ELEMENT_PRIMARY: c.blue.ribbon,\n    ELEMENT_SECONDARY: c.blue.hawkes,\n    ELEMENT_TERTIARY: c.gray.cadet,\n    ELEMENT_ACTIVE: c.blue.science,\n    ELEMENT_DISABLED: c.gray.geyser,\n    ELEMENT_FOCUS: c.blue.dodger,\n    STROKE: c.gray.botticelli,\n    TEXT_PRIMARY: c.blue.haiti,\n    TEXT_SECONDARY: c.blue.hawkes,\n    TEXT_TERTIARY: c.gray.cadet,\n\n    // Darth Vader\n    DARK_TERTIARY: c.gray.waterloo,\n    DARK_ELEMENT_TERTIARY: c.gray.waterloo,\n    DARK_BACKGROUND_PRIMARY: c.blue.vulcan,\n    DARK_BACKGROUND_SECONDARY: c.blue.ebony,\n    DARK_ELEMENT_ACTIVE: c.blue.oxford,\n    DARK_ELEMENT_DISABLED: c.gray.trout,\n    DARK_ELEMENT_FOCUS: c.blue.denim,\n    DARK_STROKE: c.gray.fiord,\n  };\n})(palette);\n\n/**\n * @deprecated\n */\nexport const colors = {\n  BLACK: palette.black,\n  CURRENT: palette.current,\n  TRANSPARENT: palette.transparent,\n  WHITE: palette.white,\n\n  ...accents,\n  // ...neutrals,\n  ...tokens,\n};\n\n// export const colors = Object.keys(COLORS).reduce((acc, value: string) => {\n//   return {\n//     ...acc,\n//     [value]: `var(--color-${value.toLowerCase().replace(/_/g, '-')}, ${COLORS[value]})`,\n//   };\n// }, {});\n","// @see https://github.com/emotion-js/emotion/issues/1105#issuecomment-557726922\nexport const EMOTION_DISABLE_SSR =\n  '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\n\nexport const splitPropsByKeys = <T extends {}, K extends (keyof T)[]>(props: T, keys: K) => {\n  type IncludedKeys = K[number];\n  type ExcludedKeys = Exclude<keyof T, IncludedKeys>;\n\n  const restKeys = (Object.keys(props) as (keyof T)[]).filter<ExcludedKeys>(\n    (key): key is ExcludedKeys => !keys.includes(key)\n  );\n\n  return [\n    keys.reduce<{ [key in IncludedKeys]: T[key] }>((memo, current) => {\n      memo[current] = props[current];\n      return memo;\n    }, {} as { [key in IncludedKeys]: T[key] }),\n\n    restKeys.reduce<{ [key in ExcludedKeys]: T[key] }>((memo, current) => {\n      memo[current] = props[current];\n      return memo;\n    }, {} as { [key in ExcludedKeys]: T[key] }),\n  ] as const;\n};\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { element, idle } from './idle.styles';\n\nexport interface IdleProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Color\n   */\n  color?: string;\n  /**\n   * Delay\n   */\n  delay?: number;\n  /**\n   * Duration\n   */\n  duration?: number;\n  /**\n   * Gap\n   */\n  gap?: string;\n  /**\n   * Range aka amplitude\n   */\n  range?: string;\n  /**\n   * Size\n   */\n  size?: string;\n}\n\n/**\n * Idle indicator.\n * @deprecated\n */\nexport const Idle = forwardRef<HTMLDivElement, IdleProps>(\n  (\n    {\n      color = 'currentColor',\n      delay = 100,\n      duration = 500,\n      gap = '4px',\n      range = '6px',\n      size = '5px',\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const delegated = { color, delay, duration, gap, range, size, ...props };\n    const qa = {\n      'data-qa': 'idle',\n    };\n    return (\n      <Container ref={ref} {...qa} {...delegated}>\n        <Element />\n        <Element />\n        <Element />\n      </Container>\n    );\n  }\n);\n\nconst Element = styled.div`\n  ${element};\n`;\n\nconst Container = styled.div<IdleProps>(\n  ({ color, delay, duration, gap, range, size }) => css`\n    --color: ${color};\n    --delay: ${delay}ms;\n    --duration: ${duration}ms;\n    --gap: ${gap};\n    --range: ${range};\n    --size: ${size};\n\n    ${idle};\n  `\n);\n","import { css, keyframes } from '@emotion/react';\n\nimport { EASING } from '../../styles';\n\nexport const idleAnimation = keyframes`\n  0%    { --offset: calc(-0.5 * var(--range)); }\n  100%  { --offset: calc(0.5 * var(--range)); }\n`;\n\nexport const element = css`\n  @property --offset {\n    inherits: true;\n    initial-value: 0;\n    syntax: '<length>';\n  }\n\n  animation: ${idleAnimation} var(--duration) ${EASING.easeInOut} var(--shift) infinite alternate;\n  background: var(--color);\n  border-radius: 50%;\n  display: block;\n  height: var(--size);\n  opacity: var(--opacity);\n  transform: translateY(var(--offset));\n  width: var(--size);\n  will-change: transform;\n\n  &:nth-of-type(1) {\n    --shift: calc(0 * var(--delay));\n    --opacity: 1;\n  }\n  &:nth-of-type(2) {\n    --shift: calc(1 * var(--delay));\n    --opacity: 0.75;\n  }\n  &:nth-of-type(3) {\n    --shift: calc(2 * var(--delay));\n    --opacity: 0.5;\n  }\n`;\n\nexport const idle = css`\n  display: inline-flex;\n  gap: var(--gap);\n`;\n","import { css } from '@emotion/react';\n\nexport const clamp = css`\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: var(--lines, 1);\n`;\n\nexport const truncate = css`\n  display: inline-block;\n  max-width: inherit;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: inherit;\n`;\n\nexport { EASING, fadeInAnimation } from './animations';\n","import { keyframes } from '@emotion/react';\nimport { Keyframes } from '@emotion/serialize';\n\n/**\n * Easing.\n * @see http://matthewlein.com/ceaser/\n */\nexport const EASING = {\n  easeInOut: 'ease-in-out',\n  easeInOutQuart: 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  easeOutCirc: 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  easeOutCubic: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n};\n\n/**\n * Fade In.\n */\nexport const fadeInAnimation: Keyframes = keyframes`\n  0%    { opacity: 0; }\n  100%  { opacity: 1; }\n`;\n","import { css } from '@emotion/react';\n\nimport { container as containerStyle, input as inputStyle } from '../input';\n\nexport const indicator = css`\n  background-image: linear-gradient(90deg, transparent, var(--input-background-color) 60%);\n  padding-block: 6px;\n  padding-inline-start: 2em;\n  place-self: start end;\n  position: absolute;\n`;\n\nexport const container = css`\n  ${containerStyle};\n\n  align-items: stretch;\n  display: inline-grid;\n  position: relative;\n  padding-block: calc(0.8 * var(--input-indent));\n\n  &::after,\n  textarea,\n  [data-indicator] {\n    grid-area: 1 / 1 / -1 / -1;\n  }\n\n  &[data-expandable] {\n    &::after {\n      content: attr(data-value);\n      min-width: 0;\n      overflow: hidden;\n      overflow-wrap: break-word;\n      visibility: hidden;\n      white-space: pre-wrap;\n    }\n  }\n`;\n\nexport const textarea = css`\n  ${inputStyle};\n\n  width: 100%;\n\n  [data-expandable] & {\n    overflow-y: hidden;\n  }\n\n  [data-resize='both'] & {\n    resize: both;\n  }\n  [data-resize='horizontal'] & {\n    resize: horizontal;\n  }\n  [data-resize='vertical'] & {\n    resize: vertical;\n  }\n  [data-resize='none'] & {\n    resize: none;\n  }\n`;\n","import styled from '@emotion/styled';\nimport React, { ElementType, forwardRef, InputHTMLAttributes, ReactElement } from 'react';\n\nimport { colors } from '../../colors';\nimport { truncate } from '../../styles';\nimport { InternalHTMLAttributes, SizeType } from '../../types';\nimport { splitPropsByKeys } from '../../utils';\nimport { Idle as Indicator } from '../idle';\nimport { affix, container, input } from './input.styles';\n\nexport interface InputProps\n  extends InternalHTMLAttributes,\n    Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n\n  /**\n   * Affix (icons, labels, units)\n   */\n  affix?: string | Array<string | undefined> | ReactElement | ReactElement[];\n  /**\n   * Leader placeholder (buttons, icons)\n   */\n  leader?: ReactElement;\n  /**\n   * Trailer placeholder (buttons, icons)\n   */\n  trailer?: ReactElement;\n\n  /**\n   * Length (aka `width`)\n   */\n  length?: string;\n  /**\n   * Size\n   */\n  size?: Exclude<SizeType, 'xs' | 'xl'>;\n  /**\n   * Theme\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * State: Active\n   */\n  active?: boolean;\n  /**\n   * State: Busy\n   */\n  busy?: boolean;\n  /**\n   * State: Disabled\n   */\n  disabled?: boolean;\n  /**\n   * State: Invalid\n   */\n  invalid?: boolean;\n  /**\n   * State: Read-only\n   */\n  readonly?: boolean;\n}\n\n/**\n * Input\n */\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      active,\n      affix,\n      as = 'label',\n      busy,\n      className,\n      disabled,\n      invalid,\n      leader,\n      length,\n      readonly,\n      size = 'md',\n      style,\n      theme,\n      trailer,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const [prefix, suffix] = Array.isArray(affix) ? affix : [affix];\n    const [containerProps, inputProps] = splitPropsByKeys(props, [\n      'data-active',\n      'data-hover',\n      'data-invalid',\n    ]);\n    const qa = { 'data-qa': 'input' };\n\n    return (\n      <Container\n        {...containerProps}\n        as={as}\n        className={className}\n        data-active={active || null}\n        data-busy={busy || null}\n        data-disabled={disabled || null}\n        data-invalid={invalid || null}\n        data-readonly={readonly || null}\n        data-size={size}\n        data-theme={theme || null}\n        style={{ ['--input-length' as string]: length, ...style }}\n      >\n        {prefix && <Prefix>{prefix}</Prefix>}\n        {leader}\n        <Element {...qa} {...inputProps} ref={ref} disabled={disabled} readOnly={readonly} />\n        {busy && (\n          <Indicator\n            gap=\"2px\"\n            size=\"4px\"\n            style={{\n              ['--color' as string]: colors.ELEMENT_PRIMARY,\n            }}\n          />\n        )}\n        {trailer}\n        {suffix && <Suffix>{suffix}</Suffix>}\n      </Container>\n    );\n  }\n);\n\nconst Container = styled.label`\n  --gap: 1px;\n\n  ${container};\n\n  button {\n    --button-radius: 4px;\n    --button-size: calc(var(--input-size) - 2 * (var(--input-border-size) + 2 * var(--gap)));\n\n    flex-shrink: 0;\n    margin-right: calc(2 * var(--gap) - 1 * var(--input-indent));\n  }\n`;\n\nconst Element = styled.input`\n  ${input};\n  ${truncate};\n`;\n\nconst Prefix = styled.span`\n  ${affix};\n`;\n\nconst Suffix = styled.span`\n  ${affix};\n`;\n","import { css } from '@emotion/react';\nimport { transparentize } from 'color2k';\n\nimport { colors } from '../../colors';\nimport { input as inputToken } from '../../typography';\n\n/**\n * Input container\n */\nexport const container = css`\n  ${inputToken};\n\n  --input-background-color: ${colors.WHITE};\n  --input-border-color: ${transparentize('#c8d7fc', 0.6)};\n  --input-border-size: 2px;\n  --input-color: ;\n  --input-gap: 8px;\n  --input-indent: 10px;\n  --input-length: 100%;\n  --input-line-height: var(--input-size);\n  --input-placeholder-color: ${colors.TEXT_TERTIARY};\n  --input-radius: 6px;\n  --input-size: ;\n\n  align-items: center;\n  background-clip: padding-box;\n  background-color: var(--input-background-color);\n  border: var(--input-border-size) solid var(--input-border-color);\n  border-radius: var(--input-radius);\n  color: var(--input-color);\n  display: flex;\n  gap: var(--input-gap);\n  min-height: var(--input-size);\n  margin: 0;\n  min-width: var(--input-size);\n  outline: 0;\n  padding-inline: var(--input-indent);\n  transition-duration: 0.2s;\n  transition-property: border-color, width;\n  transition-timing-function: ease-in-out;\n  width: var(--input-length);\n  will-change: border-color, width;\n\n  &:is(:active, :focus-within, :hover, [data-active], [data-hover]):not([data-disabled]) {\n    --input-border-color: ${colors.ELEMENT_FOCUS};\n  }\n  &:is([data-invalid]):not([data-disabled]) {\n    --input-border-color: ${colors.DANGER};\n  }\n  &:is([data-disabled]) {\n    --input-color: ${colors.ELEMENT_DISABLED};\n    pointer-events: none;\n  }\n  &:is([data-readonly]) {\n    cursor: pointer;\n  }\n\n  &[data-size='sm'] {\n    --input-size: 30px;\n  }\n  &[data-size='md'] {\n    --input-size: 36px;\n  }\n  &[data-size='lg'] {\n    --font-size: 15px;\n    --input-size: 40px;\n  }\n\n  /* [data-theme='dark'] &,\n  &[data-theme='dark'] {} */\n`;\n\n/**\n * Input\n */\nexport const input = css`\n  background-color: ${colors.TRANSPARENT};\n  border: none;\n  color: currentColor;\n  font: inherit;\n  min-width: 0;\n  outline: 0;\n  padding: 0;\n\n  &::placeholder {\n    color: var(--input-placeholder-color);\n  }\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button,\n  &::-webkit-search-cancel-button {\n    appearance: none;\n    display: none;\n  }\n\n  &[readonly] {\n    pointer-events: none;\n  }\n`;\n\n/**\n * Input affix\n */\nexport const affix = css`\n  align-items: center;\n  display: inline-flex;\n  color: ${colors.TEXT_TERTIARY};\n  margin-inline: calc(-0.5 * var(--input-gap));\n`;\n","import { css } from '@emotion/react';\n\nimport { colors } from '../colors';\n\nexport const base = css`\n  --color: ${colors.TEXT_PRIMARY};\n  --font-family: 'Inter', sans-serif;\n  --font-size: ;\n  --font-weight: 400;\n  --letter-spacing: ;\n  --line-height: ;\n\n  box-sizing: border-box;\n  color: var(--color);\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  font-weight: var(--font-weight);\n  letter-spacing: var(--letter-spacing);\n  line-height: var(--line-height);\n`;\n\nconst heading = css`\n  ${base};\n\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n\n  margin: 0;\n`;\n\nexport const h1 = css`\n  ${heading};\n\n  --font-size: 18px;\n  --line-height: calc(24 / 18);\n`;\n\nexport const h2 = css`\n  ${heading};\n\n  --font-size: 16px;\n  --line-height: calc(24 / 16);\n`;\n\nexport const h3 = css`\n  ${heading};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n`;\n\nexport const h4 = css`\n  ${heading};\n\n  --font-size: 13px;\n  --line-height: calc(16 / 13);\n`;\n\nexport const h5 = css`\n  ${h4};\n\n  --font-weight: 600;\n`;\n\nexport const paragraph = css`\n  ${base};\n\n  --font-size: 13px;\n  --font-weight: 500;\n  --line-height: calc(16 / 13);\n`;\n\nexport const button = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 600;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n\n  text-decoration: none;\n`;\n\nexport const label = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n`;\n\nexport const input = css`\n  ${base};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n  --font-weight: 600;\n`;\n"],"mappings":"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","names":["textarea_exports","__export","Textarea","container","indicator","textarea","__toCommonJS","import_react","import_styled","palette","accents","c","tokens","colors","splitPropsByKeys","props","keys","restKeys","key","memo","current","import_react","import_styled","import_react","import_react","import_react","EASING","fadeInAnimation","clamp","truncate","idleAnimation","element","EASING","idle","Idle","color","delay","duration","gap","range","size","props","ref","delegated","React","Container","Element","styled","element","idle","import_react","import_styled","import_react","import_react","import_color2k","import_react","base","colors","heading","h1","h2","h3","h4","h5","paragraph","button","label","input","container","input","colors","affix","Input","active","affix","as","busy","className","disabled","invalid","leader","length","readonly","size","style","theme","trailer","props","ref","prefix","suffix","containerProps","inputProps","splitPropsByKeys","qa","React","Container","Prefix","Element","Idle","colors","Suffix","styled","container","input","truncate","indicator","container","textarea","input","Textarea","active","as","busy","className","disabled","expandable","invalid","length","readonly","resize","style","theme","props","ref","containerProps","textareaProps","splitPropsByKeys","Container","Element","Idle","indicator","colors","styled","container","textarea"]}