{"version":3,"sources":["../../../src/components/flex/index.ts","../../../src/components/flex/flex.tsx"],"sourcesContent":["export { Flex } from './flex';\nexport type { FlexProps } from './flex';\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { ElementType, forwardRef, HTMLAttributes, ReactNode } from 'react';\n\nimport {\n  AlignmentFlexboxType,\n  AlignmentPrimaryType,\n  AlignmentSecondaryType,\n  AlignmentTertiaryType,\n} from '../../types';\n\nexport interface FlexProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * Alignment, secondary axis\n   */\n  align?: AlignmentSecondaryType | AlignmentFlexboxType;\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n  /**\n   * Block or inline\n   */\n  block?: boolean;\n  /**\n   * Children\n   */\n  children: ReactNode;\n  /**\n   * Direction (default is `row`)\n   */\n  direction?: 'column' | 'column-reverse' | 'row' | 'row-reverse';\n  /**\n   * Gap\n   */\n  gap?: string;\n  /**\n   * Alignment, primary axis\n   */\n  justify?: AlignmentPrimaryType | AlignmentTertiaryType | AlignmentFlexboxType;\n  /**\n   * Wrap (default is `no-wrap`)\n   */\n  wrap?: boolean;\n}\n\n/**\n * Flexbox wrapper.\n */\nexport const Flex = forwardRef<HTMLDivElement, FlexProps>(\n  ({ align, as = 'div', block, direction, gap, justify, wrap, ...props }, ref): JSX.Element => {\n    const delegated = { align, block, direction, gap, justify, ...props };\n    return <Container as={as} data-wrap={wrap || null} ref={ref} {...delegated} />;\n  }\n);\n\nconst Container = styled.div<FlexProps>(\n  ({ align, block, direction, gap, justify }) => ({\n    alignItems: align,\n    display: `${block ? 'flex' : 'inline-flex'}`,\n    flexDirection: direction,\n    gap: gap,\n    justifyContent: justify,\n  }),\n  css`\n    &[data-wrap] {\n      flex-wrap: wrap;\n    }\n  `\n);\n"],"mappings":";0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,UAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAAoB,0BACpBC,EAAmB,8BACnBD,EAA0E,oBA+C7DE,KAAO,cAClB,CAAC,CAAE,MAAAC,EAAO,GAAAC,EAAK,MAAO,MAAAC,EAAO,UAAAC,EAAW,IAAAC,EAAK,QAAAC,EAAS,KAAAC,KAASC,CAAM,EAAGC,IAAqB,CAC3F,IAAMC,EAAY,CAAE,MAAAT,EAAO,MAAAE,EAAO,UAAAC,EAAW,IAAAC,EAAK,QAAAC,EAAS,GAAGE,CAAM,EACpE,OAAO,EAAAG,QAAA,cAACC,EAAA,CAAU,GAAIV,EAAI,YAAWK,GAAQ,KAAM,IAAKE,EAAM,GAAGC,EAAW,CAC9E,CACF,EAEME,EAAY,EAAAC,QAAO,IACvB,CAAC,CAAE,MAAAZ,EAAO,MAAAE,EAAO,UAAAC,EAAW,IAAAC,EAAK,QAAAC,CAAQ,KAAO,CAC9C,WAAYL,EACZ,QAAS,GAAGE,EAAQ,OAAS,gBAC7B,cAAeC,EACf,IAAKC,EACL,eAAgBC,CAClB,GACA;AAAA;AAAA;AAAA;AAAA,GAKF","names":["flex_exports","__export","Flex","__toCommonJS","import_react","import_styled","Flex","align","as","block","direction","gap","justify","wrap","props","ref","delegated","React","Container","styled"]}