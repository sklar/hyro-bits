{"version":3,"sources":["../../../src/components/button/index.ts","../../../src/components/button/button.tsx","../../../src/components/idle/idle.tsx","../../../src/components/idle/idle.styles.ts","../../../src/styles/index.ts","../../../src/styles/animations.ts","../../../src/components/button/button.styles.ts","../../../src/colors/colors.ts","../../../src/constants.ts","../../../src/typography/typography.ts"],"sourcesContent":["export { Button } from './button';\nexport type { ButtonProps } from './button';\n\nexport { button, sizes, variants } from './button.styles';\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport { kebabCase } from 'case-anything';\nimport { ElementType, forwardRef, ReactElement, ReactNode } from 'react';\n\nimport { SizeType, ThemeType, VariantType } from '../../types';\nimport { PolymorphicComponentProps, PolymorphicRef } from '../../types/polymorphic';\nimport { Idle as Indicator } from '../idle';\nimport { button, sizes, variants } from './button.styles';\n\nexport interface SharedButtonProps {\n  /**\n   * Children\n   */\n  children?: ReactNode;\n  /**\n   * Label\n   */\n  text?: string;\n  /**\n   * Type\n   */\n  type?: 'button' | 'reset' | 'submit';\n\n  /**\n   * Icon\n   */\n  icon?: ReactElement | ReactElement[];\n  /**\n   * Icon placement.\n   */\n  placement?: 'left' | 'right';\n  /**\n   * Round\n   */\n  round?: boolean;\n  /**\n   * Size\n   */\n  size?: Exclude<SizeType, 'xs' | 'xl'>;\n  /**\n   * Synthetic behaviour to prevent `:active` and `:focus` styles.\n   */\n  synthetic?: boolean;\n  /**\n   * Theme\n   */\n  theme?: Exclude<ThemeType, 'notice'>;\n  /**\n   * Toggle\n   */\n  toggle?: boolean;\n  /**\n   * Variant\n   */\n  variant?: VariantType;\n\n  /**\n   * State: Active\n   */\n  active?: boolean;\n  /**\n   * State: Busy\n   */\n  busy?: boolean;\n  /**\n   * State: Disabled\n   */\n  disabled?: boolean;\n}\n\nexport type ButtonProps<C extends ElementType> = PolymorphicComponentProps<C, SharedButtonProps>;\n\ntype ButtonComponent = <C extends ElementType = 'button'>(props: ButtonProps<C>) => ReactElement;\n\n/**\n * Button\n */\nexport const Button = forwardRef(\n  <C extends ElementType = 'button'>(\n    {\n      active,\n      as,\n      busy,\n      children,\n      disabled,\n      icon,\n      placement,\n      round,\n      size = 'md',\n      synthetic,\n      text,\n      theme,\n      toggle,\n      type = 'button',\n      variant = 'secondary',\n      ...props\n    }: ButtonProps<C>,\n    ref: PolymorphicRef<C>\n  ) => {\n    const [leader, trailer] = Array.isArray(icon) ? icon : [icon];\n    const isButton = as === undefined || as === 'button';\n    const qa = {\n      // prettier-ignore\n      'data-qa': [\n        `${isButton ? 'button' : 'link'}`,\n        ...(text ? [`${kebabCase(text)}`] : []),\n      ].join('-'),\n    };\n\n    const Element = as || 'button';\n\n    return (\n      <Element\n        css={[button, sizes[size], variants[variant]]}\n        data-active={active || null}\n        data-busy={busy || null}\n        data-icon={\n          (icon && !(text || children) && 'single') || (leader && trailer && 'both') || placement\n        }\n        data-round={round || null}\n        data-synthetic={synthetic || null}\n        data-theme={theme || null}\n        data-toggle={toggle || null}\n        disabled={isButton && (busy || disabled) ? true : undefined}\n        ref={ref}\n        type={isButton ? type : undefined}\n        {...qa}\n        {...props}\n      >\n        {leader}\n        {text ? text : children}\n        {trailer}\n        {busy && (\n          <Indicator\n            style={{ ['--color' as string]: 'var(--button-color)', position: 'absolute' }}\n          />\n        )}\n      </Element>\n    );\n  }\n) as ButtonComponent;\n","import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { element, idle } from './idle.styles';\n\nexport interface IdleProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Color\n   */\n  color?: string;\n  /**\n   * Delay\n   */\n  delay?: number;\n  /**\n   * Duration\n   */\n  duration?: number;\n  /**\n   * Gap\n   */\n  gap?: string;\n  /**\n   * Range aka amplitude\n   */\n  range?: string;\n  /**\n   * Size\n   */\n  size?: string;\n}\n\n/**\n * Idle indicator.\n */\nexport const Idle = forwardRef<HTMLDivElement, IdleProps>(\n  (\n    {\n      color = 'currentColor',\n      delay = 100,\n      duration = 500,\n      gap = '4px',\n      range = '6px',\n      size = '5px',\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const delegated = { color, delay, duration, gap, range, size, ...props };\n    const qa = {\n      'data-qa': 'idle',\n    };\n    return (\n      <Container ref={ref} {...qa} {...delegated}>\n        <Element />\n        <Element />\n        <Element />\n      </Container>\n    );\n  }\n);\n\nconst Element = styled.div`\n  ${element};\n`;\n\nconst Container = styled.div<IdleProps>(\n  ({ color, delay, duration, gap, range, size }) => css`\n    --color: ${color};\n    --delay: ${delay}ms;\n    --duration: ${duration}ms;\n    --gap: ${gap};\n    --range: ${range};\n    --size: ${size};\n\n    ${idle};\n  `\n);\n","import { css, keyframes } from '@emotion/react';\n\nimport { EASING } from '../../styles';\n\nexport const idleAnimation = keyframes`\n  0%    { --offset: calc(-0.5 * var(--range)); }\n  100%  { --offset: calc(0.5 * var(--range)); }\n`;\n\nexport const element = css`\n  @property --offset {\n    inherits: true;\n    initial-value: 0;\n    syntax: '<length>';\n  }\n\n  animation: ${idleAnimation} var(--duration) ${EASING.easeInOut} var(--shift) infinite alternate;\n  background: var(--color);\n  border-radius: 50%;\n  display: block;\n  height: var(--size);\n  opacity: var(--opacity);\n  transform: translateY(var(--offset));\n  width: var(--size);\n  will-change: transform;\n\n  &:nth-of-type(1) {\n    --shift: calc(0 * var(--delay));\n    --opacity: 1;\n  }\n  &:nth-of-type(2) {\n    --shift: calc(1 * var(--delay));\n    --opacity: 0.75;\n  }\n  &:nth-of-type(3) {\n    --shift: calc(2 * var(--delay));\n    --opacity: 0.5;\n  }\n`;\n\nexport const idle = css`\n  display: inline-flex;\n  gap: var(--gap);\n`;\n","import { css } from '@emotion/react';\n\nexport const clamp = css`\n  display: -webkit-box;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: var(--lines, 1);\n`;\n\nexport const truncate = css`\n  display: inline-block;\n  max-width: inherit;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: inherit;\n`;\n\nexport { EASING, fadeInAnimation } from './animations';\n","import { keyframes } from '@emotion/react';\nimport { Keyframes } from '@emotion/serialize';\n\n/**\n * Easing.\n * @see http://matthewlein.com/ceaser/\n */\nexport const EASING = {\n  easeInOut: 'ease-in-out',\n  easeInOutQuart: 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  easeOutCirc: 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  easeOutCubic: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n};\n\n/**\n * Fade In.\n */\nexport const fadeInAnimation: Keyframes = keyframes`\n  0%    { opacity: 0; }\n  100%  { opacity: 1; }\n`;\n","import { css, SerializedStyles } from '@emotion/react';\nimport { adjustHue, darken, desaturate, lighten } from 'color2k';\n\nimport { colors } from '../../colors';\nimport { Size, Variant } from '../../constants';\nimport { button as buttonToken } from '../../typography';\n\nconst base = css`\n  ${buttonToken};\n\n  --button-background-color: ;\n  --button-border-color: ;\n  --button-border-size: 1px;\n  --button-box-shadow: ;\n  --button-color: ;\n  --button-font-weight: 600;\n  --button-gap: 8px;\n  --button-icon-offset: ;\n  --button-icon-rotation: 0;\n  --button-icon-transform: ;\n  --button-indent: ;\n  --button-line-height: var(--button-size);\n  --button-radius: 6px;\n  --button-size: ;\n\n  align-items: center;\n  background-color: var(--button-background-color);\n  border: var(--button-border-size) solid var(--button-border-color);\n  border-radius: var(--button-radius);\n  box-shadow: 0 0 0 3px var(--button-box-shadow);\n  color: var(--button-color);\n  display: inline-flex;\n  flex-shrink: 0;\n  gap: var(--button-gap);\n  height: var(--button-size);\n  justify-content: center;\n  margin: 0;\n  min-width: var(--button-size);\n  overflow: hidden;\n  outline: 0;\n  padding: 0 var(--button-indent);\n  position: relative;\n  transition-duration: 0.2s;\n  transition-property: background-color, border-color, color;\n  transition-timing-function: ease-in-out;\n  user-select: none;\n  white-space: nowrap;\n  z-index: 1;\n\n  [data-icon] {\n    flex-shrink: 0;\n    transition-duration: 0.3s;\n    transition-property: transform;\n    transition-timing-function: ease-in-out;\n    transform: var(--button-icon-transform);\n    will-change: transform;\n  }\n\n  &:is(*, #chucknorris) {\n    text-decoration: none;\n  }\n`;\n\nexport const button = css`\n  ${base};\n\n  &[data-round] {\n    --button-radius: 1000px;\n  }\n\n  &:not(:disabled, [data-busy], [data-disabled]) {\n    cursor: pointer;\n  }\n\n  &[data-busy] {\n    color: ${colors.TRANSPARENT};\n  }\n\n  &[data-toggle] {\n    --button-icon-transform: rotateX(calc(var(--button-icon-rotation) * 180deg));\n\n    &[data-active] {\n      --button-icon-rotation: 1;\n    }\n  }\n\n  &:is(:disabled, [data-disabled]):not([data-busy]) {\n    --button-background-color: ${colors.ELEMENT_DISABLED};\n    --button-border-color: ${colors.ELEMENT_DISABLED};\n  }\n\n  &[data-icon='single'] {\n    padding: 0;\n    width: var(--button-size);\n  }\n  &[data-icon='both'],\n  &[data-icon='left'] {\n    padding-left: calc(var(--button-indent) - var(--button-icon-offset));\n  }\n  &[data-icon='both'],\n  &[data-icon='right'] {\n    padding-right: calc(var(--button-indent) - var(--button-icon-offset));\n  }\n  &[data-icon='left'] {\n    flex-direction: row;\n  }\n  &[data-icon='right'] {\n    flex-direction: row-reverse;\n  }\n`;\n\n/**\n * Note that [data-hover] and [data-pressed] are here only to help\n * better illustrate `:hover` and `:active` state in the dedicated story.\n */\ntype Variants = Record<string, SerializedStyles>;\n\n/**\n * Button sizes\n */\nexport const sizes: Variants = {};\n\nsizes[Size.SMALL] = css`\n  --button-icon-offset: 0px;\n  --button-indent: 8px;\n  --button-size: 30px;\n`;\n\nsizes[Size.MEDIUM] = css`\n  --button-icon-offset: 4px;\n  --button-indent: 14px;\n  --button-size: 36px;\n`;\n\nsizes[Size.LARGE] = css`\n  --button-icon-offset: 0px;\n  --button-indent: 12px;\n  --button-size: 40px;\n  --font-size: 15px;\n`;\n\nexport const variants: Variants = {};\n\n/**\n * TODO: Themed mutations are not designed.\n * 🗣️ We can forget the `sythetic` (i.e. [data-synthetic]) for themed mutations.\n */\nvariants[Variant.PRIMARY] = css`\n  --button-background-color: ${colors.ELEMENT_PRIMARY};\n  --button-border-color: ${colors.ELEMENT_PRIMARY};\n  --button-color: ${colors.WHITE};\n\n  &:is(:active, [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]) {\n    --button-box-shadow: ${colors.ELEMENT_SECONDARY};\n  }\n  &:is(:active, :focus, [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]),\n  &:is(:hover, [data-active], [data-hover]):not(:disabled, [data-busy], [data-disabled]) {\n    --button-background-color: ${colors.ELEMENT_ACTIVE};\n    --button-border-color: ${colors.ELEMENT_ACTIVE};\n  }\n\n  &[data-theme='danger'] {\n    --button-background-color: ${colors.DANGER};\n    --button-border-color: ${colors.DANGER};\n    &:is(:active, :focus, :hover, [data-active], [data-hover], [data-pressed]):not(:disabled, [data-busy], [data-disabled]) {\n      --_color: ${darken(colors.DANGER, 0.16)};\n      --button-background-color: var(--_color);\n      --button-border-color: var(--_color);\n    }\n  }\n  &[data-theme='success'] {\n    --button-background-color: ${colors.SUCCESS};\n    --button-border-color: ${colors.SUCCESS};\n    &:is(:active, :focus, :hover, [data-active], [data-hover], [data-pressed]):not(:disabled, [data-busy], [data-disabled]) {\n      --_color: ${darken(colors.SUCCESS, 0.02)};\n      --button-background-color: var(--_color);\n      --button-border-color: var(--_color);\n    }\n  }\n`;\n\nvariants[Variant.SECONDARY] = css`\n  --button-background-color: ${colors.ELEMENT_SECONDARY};\n  --button-border-color: ${colors.ELEMENT_SECONDARY};\n  --button-color: ${colors.TEXT_PRIMARY};\n\n  &:is(:active, [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]) {\n    --button-box-shadow: #f6f8fd;\n  }\n  &:is(:active, :focus, :hover, [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]),\n  &:is(:hover, [data-active], [data-hover]):not(:disabled, [data-busy], [data-disabled]) {\n    --button-background-color: #d8e1fc;\n    --button-border-color: #d8e1fc;\n    --button-color: ${colors.ELEMENT_PRIMARY};\n  }\n  &:is(:disabled, [data-disabled]):not([data-busy]) {\n    --button-color: ${colors.WHITE};\n  }\n\n  &[data-theme='danger'] {\n    --_color: ${lighten(desaturate(adjustHue(colors.DANGER, 1), 0.1), 0.34)};\n    --button-background-color: var(--_color);\n    --button-border-color: var(--_color);\n    &:is(:active, :focus, :hover, [data-active], [data-hover], [data-pressed]):not(:disabled, [data-busy], [data-disabled]) {\n      --_color: ${lighten(desaturate(adjustHue(colors.DANGER, 2), 0.2), 0.3)};\n      --button-background-color: var(--_color);\n      --button-border-color: var(--_color);\n      --button-color: ${darken(desaturate(colors.DANGER, 0.4), 0.1)};\n    }\n  }\n  &[data-theme='success'] {\n    --_color: ${lighten(desaturate(adjustHue(colors.SUCCESS, 1), 0.6), 0.5)};\n    --button-background-color: var(--_color);\n    --button-border-color: var(--_color);\n    &:is(:active, :focus, :hover, [data-active], [data-hover], [data-pressed]):not(:disabled, [data-busy], [data-disabled]) {\n      --_color: ${lighten(desaturate(adjustHue(colors.SUCCESS, 2), 0.4), 0.4)};\n      --button-background-color: var(--_color);\n      --button-border-color: var(--_color);\n      --button-color: ${darken(desaturate(colors.SUCCESS, 0.4), 0.1)};\n    }\n  }\n`;\n\nvariants[Variant.TERTIARY] = css`\n  --button-background-color: ${colors.TRANSPARENT};\n  --button-border-color: ${colors.TRANSPARENT};\n  --button-color: ${colors.TEXT_PRIMARY};\n\n  &:is(:active, [data-active], [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]) {\n    --button-color: ${colors.ELEMENT_PRIMARY};\n  }\n  &:is(:active, :focus, [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]),\n  &:is(:hover, [data-active], [data-hover]):not(:disabled, [data-busy], [data-disabled]) {\n    --button-background-color: ${colors.ELEMENT_SECONDARY};\n    --button-border-color: ${colors.ELEMENT_SECONDARY};\n  }\n  &:is(:disabled, [data-disabled]):not([data-busy]) {\n    --button-background-color: ${colors.TRANSPARENT};\n    --button-border-color: ${colors.TRANSPARENT};\n    --button-color: ${colors.ELEMENT_DISABLED};\n  }\n\n  [data-theme='dark'] &,\n  &[data-theme='dark'] {\n    &:is(:active, [data-active], [data-pressed]):not(:disabled, [data-busy], [data-disabled], [data-synthetic]) {\n      --button-background-color: ${colors.DARK_ELEMENT_FOCUS};\n      --button-border-color: ${colors.DARK_ELEMENT_FOCUS};\n      --button-color: ${colors.WHITE};\n    }\n    &:is(:focus):not(:disabled, [data-busy], [data-disabled], [data-synthetic]),\n    &:is(:hover, [data-hover]):not(:disabled, [data-busy], [data-disabled]) {\n      --button-background-color: ${colors.DARK_ELEMENT_ACTIVE};\n      --button-border-color: ${colors.DARK_ELEMENT_ACTIVE};\n      --button-color: ${colors.WHITE};\n    }\n    &:is(:disabled, [data-disabled]):not([data-busy]) {\n      --button-color: ${colors.DARK_ELEMENT_DISABLED};\n    }\n  }\n`;\n","/**\n * Color palette.\n * @see http://veli.ee/colorpedia/\n */\nconst palette = {\n  //\n  black: '#000000',\n  //\n  blue: {\n    denim: '#184ece', // focus [dark]\n    dodger: '#3370ff', // focus\n    ebony: '#1f222f', // background / secondary [dark]\n    haiti: '#0f152e', // text\n    hawkes: '#ecf1fe', // secondary\n    oxford: '#3f485e', // active aka selection [dark]\n    ribbon: '#004bff', // primary\n    ribbon1: '#1d61ff', // notice\n    science: '#0041dd', // pressed\n    vulcan: '#131620', // background / primary [dark]\n  },\n  //\n  current: 'currentColor',\n  //\n  gray: {\n    botticelli: '#dbe4ee', // dividers and strokes\n    cadet: '#b4bac8', // tertiary\n    fiord: '#3b4463', // dividers and strokes [dark]\n    geyser: '#ced4e2', // disabled\n    porcelain: '#f6f7f8', // background / secondary\n    trout: '#545864', // disabled [dark]\n    waterloo: '#757c91', // tertiary [dark]\n  },\n  //\n  green: {\n    caribbean: '#07d094', // success\n  },\n  //\n  orange: {\n    amber: '#ffbe0b', // warning\n  },\n  //\n  red: {\n    radical: '#ff3b58', // error\n  },\n  //\n  transparent: 'transparent',\n  //\n  white: '#ffffff', // background / primary\n};\n\n/**\n * Accent colors.\n */\nconst accents = ((c) => {\n  return {\n    DANGER: c.red.radical,\n    NOTICE: c.blue.ribbon1,\n    SUCCESS: c.green.caribbean,\n    WARNING: c.orange.amber,\n  };\n})(palette);\n\n/**\n * Neutral colors.\n */\n// const neutrals = ((c) => {\n//   return {};\n// })(palette);\n\n/**\n * Token colors.\n */\nconst tokens = ((c) => {\n  return {\n    PRIMARY: c.blue.ribbon,\n    SECONDARY: c.blue.hawkes,\n    TERTIARY: c.gray.cadet,\n    BACKGROUND_PRIMARY: c.white,\n    BACKGROUND_SECONDARY: c.gray.porcelain,\n    ELEMENT_PRIMARY: c.blue.ribbon,\n    ELEMENT_SECONDARY: c.blue.hawkes,\n    ELEMENT_TERTIARY: c.gray.cadet,\n    ELEMENT_ACTIVE: c.blue.science,\n    ELEMENT_DISABLED: c.gray.geyser,\n    ELEMENT_FOCUS: c.blue.dodger,\n    STROKE: c.gray.botticelli,\n    TEXT_PRIMARY: c.blue.haiti,\n    TEXT_SECONDARY: c.blue.hawkes,\n    TEXT_TERTIARY: c.gray.cadet,\n\n    // Darth Vader\n    DARK_TERTIARY: c.gray.waterloo,\n    DARK_ELEMENT_TERTIARY: c.gray.waterloo,\n    DARK_BACKGROUND_PRIMARY: c.blue.vulcan,\n    DARK_BACKGROUND_SECONDARY: c.blue.ebony,\n    DARK_ELEMENT_ACTIVE: c.blue.oxford,\n    DARK_ELEMENT_DISABLED: c.gray.trout,\n    DARK_ELEMENT_FOCUS: c.blue.denim,\n    DARK_STROKE: c.gray.fiord,\n  };\n})(palette);\n\nexport const colors = {\n  BLACK: palette.black,\n  CURRENT: palette.current,\n  TRANSPARENT: palette.transparent,\n  WHITE: palette.white,\n\n  ...accents,\n  // ...neutrals,\n  ...tokens,\n};\n\n// export const colors = Object.keys(COLORS).reduce((acc, value: string) => {\n//   return {\n//     ...acc,\n//     [value]: `var(--color-${value.toLowerCase().replace(/_/g, '-')}, ${COLORS[value]})`,\n//   };\n// }, {});\n","export const Direction = {\n  NONE: 'None',\n  ASCENDING: 'Asc',\n  DESCENDING: 'Desc',\n} as const;\n\nexport const Size = {\n  XSMALL: 'xs',\n  SMALL: 'sm',\n  MEDIUM: 'md',\n  LARGE: 'lg',\n  XLARGE: 'xl',\n} as const;\n\nexport const Theme = {\n  NOTICE: 'notice',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  DANGER: 'danger',\n  DARK: 'dark',\n} as const;\n\nexport const Variant = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  TERTIARY: 'tertiary',\n} as const;\n","import { css } from '@emotion/react';\n\nimport { colors } from '../colors';\n\nexport const base = css`\n  --color: ${colors.TEXT_PRIMARY};\n  --font-family: 'Inter', sans-serif;\n  --font-size: ;\n  --font-weight: 400;\n  --letter-spacing: ;\n  --line-height: ;\n\n  box-sizing: border-box;\n  color: var(--color);\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  font-weight: var(--font-weight);\n  letter-spacing: var(--letter-spacing);\n  line-height: var(--line-height);\n`;\n\nconst heading = css`\n  ${base};\n\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n\n  margin: 0;\n`;\n\nexport const h1 = css`\n  ${heading};\n\n  --font-size: 18px;\n  --line-height: calc(24 / 18);\n`;\n\nexport const h2 = css`\n  ${heading};\n\n  --font-size: 16px;\n  --line-height: calc(24 / 16);\n`;\n\nexport const h3 = css`\n  ${heading};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n`;\n\nexport const h4 = css`\n  ${heading};\n\n  --font-size: 13px;\n  --line-height: calc(16 / 13);\n`;\n\nexport const h5 = css`\n  ${h4};\n\n  --font-weight: 600;\n`;\n\nexport const paragraph = css`\n  ${base};\n\n  --font-size: 13px;\n  --font-weight: 500;\n  --line-height: calc(16 / 13);\n`;\n\nexport const button = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 600;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n\n  text-decoration: none;\n`;\n\nexport const label = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n`;\n\nexport const input = css`\n  ${base};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n  --font-weight: 600;\n`;\n"],"mappings":"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","names":[]}