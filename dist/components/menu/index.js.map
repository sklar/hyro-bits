{"version":3,"sources":["../../../src/components/menu/index.ts","../../../src/components/menu/menu.tsx","../../../src/components/menu/menu.styles.ts","../../../src/colors/colors.ts","../../../src/typography/typography.ts","../../../src/components/divider/divider.tsx","../../../src/components/divider/divider.styles.ts","../../../src/components/menu/menu-divider.tsx","../../../src/components/menu/menu-group.tsx","../../../src/components/menu/menu-item.tsx","../../../src/components/menu/menu-title.tsx"],"sourcesContent":["export { Menu } from './menu';\nexport type { MenuProps } from './menu';\n\nexport { MenuDivider } from './menu-divider';\n\nexport { MenuGroup, MenuGroupTitle } from './menu-group';\n\nexport { MenuItem } from './menu-item';\nexport type { MenuItemProps } from './menu-item';\n\nexport { MenuTitle } from './menu-title';\n\nexport { menu, divider, group, groupTitle, item, title } from './menu.styles';\n","import styled from '@emotion/styled';\nimport React, { forwardRef, HTMLAttributes } from 'react';\n\nimport { menu } from './menu.styles';\n\nexport interface MenuProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Align items along primary axis\n   */\n  justify?: boolean;\n  /**\n   * Padding\n   */\n  padding?: boolean;\n  /**\n   * Size\n   */\n  size?: string;\n  /**\n   * Theme\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * State: Active\n   */\n  active?: boolean;\n\n  /**\n   * Event: Close\n   */\n  onClose?: () => void;\n}\n\n/**\n * Context menu\n */\nexport const Menu = forwardRef<HTMLDivElement, MenuProps>(\n  ({ active, justify, padding, size, theme, ...props }, ref): JSX.Element => {\n    const qa = {\n      'data-qa': 'menu',\n    };\n    return (\n      <Container\n        data-active={active || null}\n        data-justify={justify || null}\n        data-padding={padding || null}\n        data-theme={theme || null}\n        ref={ref}\n        style={{ ['--size' as string]: size }}\n        {...qa}\n        {...props}\n      />\n    );\n  }\n);\n\nconst Container = styled.section`\n  ${menu};\n`;\n","import { css } from '@emotion/react';\n\nimport { colors } from '../../colors';\nimport { button, h3, paragraph } from '../../typography';\nimport { divider as dividerStyle, horizontal as horizontalDividerStyle } from '../divider';\n\n/**\n * Menu\n */\nexport const menu = css`\n  --background-color: ${colors.WHITE};\n  --border-color: ${colors.WHITE};\n  --border-size: 2px;\n  --box-shadow: #cbcedc;\n  --gap: 4px;\n  --indent: 8px;\n  --index: 1;\n  --radius: 6px;\n  --size: ;\n\n  background-color: var(--background-color);\n  border: var(--border-size) solid var(--border-color);\n  border-radius: var(--radius);\n  box-shadow: 0 3px 9px var(--box-shadow);\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  gap: var(--gap);\n  padding: calc(1.5 * var(--indent)) var(--indent);\n  user-select: none;\n  width: var(--size);\n  z-index: var(--index);\n\n  &[data-padding] {\n    padding: calc(2 * var(--indent));\n    padding-top: calc(1.5 * var(--indent));\n  }\n\n  [data-theme='dark'] &,\n  &[data-theme='dark'] {\n    --background-color: ${colors.DARK_BACKGROUND_PRIMARY};\n    --border-color: ${colors.DARK_STROKE};\n    --box-shadow: ${colors.BLACK};\n  }\n`;\n\n/**\n * Menu divider\n */\nexport const divider = css`\n  ${dividerStyle};\n  ${horizontalDividerStyle};\n`;\n\n/**\n * Menu group\n */\nexport const group = css`\n  display: flex;\n  flex-direction: column;\n  gap: var(--gap);\n\n  & + & {\n    margin-top: var(--gap);\n\n    &::before {\n      ${divider};\n      content: '';\n    }\n  }\n`;\n\n/**\n * Menu group title\n */\nexport const groupTitle = css`\n  ${h3};\n\n  align-items: center;\n  display: flex;\n  padding: var(--indent);\n  padding-bottom: calc(0.5 * var(--indent));\n\n  &[data-variant='primary'] {\n    --font-size: 16px;\n    --line-height: calc(24 / 16);\n\n    display: inline-block;\n    padding-bottom: var(--indent);\n\n    &::after {\n      content: ':';\n    }\n  }\n\n  [data-theme='dark'] & {\n    --color: ${colors.WHITE};\n  }\n`;\n\n/**\n * Menu item\n *\n * Note that [data-hover] and [data-pressed] are here only to help\n *  better illustrate `:hover` and `:active` state in the dedicated story.\n */\nexport const item = css`\n  ${button};\n\n  --background-color: ;\n  --color: ;\n  --gap: 8px;\n  --indent: 8px;\n  --radius: 6px;\n  --size: 32px;\n\n  align-items: center;\n  background-color: var(--background-color);\n  border: 0;\n  border-radius: var(--radius);\n  cursor: pointer;\n  display: flex;\n  gap: var(--gap);\n  min-height: var(--size);\n  outline: 0;\n  padding: var(--indent);\n  text-align: left;\n  transition-duration: 0.2s;\n  transition-property: background-color, color;\n  transition-timing-function: ease-in-out;\n\n  &[data-justify],\n  [data-justify] & {\n    justify-content: space-between;\n\n    & > :not([data-icon]) {\n      flex: 1;\n    }\n  }\n\n  .primary,\n  .secondary {\n    transition: color 0.2s;\n  }\n  .primary {\n    color: var(--color, inherit);\n\n    & + .secondary {\n      margin-top: 2px;\n    }\n  }\n  .secondary {\n    ${paragraph};\n    color: var(--color, inherit);\n\n    --color: ${colors.ELEMENT_TERTIARY};\n  }\n\n  [data-menu='group'] & {\n    padding-left: calc(3 * var(--indent));\n  }\n\n  &:is(:active, [data-pressed]) {\n    --background-color: ${colors.ELEMENT_SECONDARY};\n    --color: ${colors.ELEMENT_PRIMARY};\n  }\n  &:is(:focus-visible, :hover, [data-hover]) {\n    --background-color: ${colors.ELEMENT_SECONDARY};\n  }\n  &:is([data-active]) {\n    --color: ${colors.ELEMENT_PRIMARY};\n  }\n\n  &:is(:active, :focus-visible, :hover, [data-active], [data-hover], [data-pressed]) {\n    .primary {\n      --color: ${colors.ELEMENT_PRIMARY};\n    }\n    .secondary {\n      --color: ${colors.TEXT_PRIMARY};\n    }\n  }\n\n  &:is([data-disabled]) {\n    cursor: default;\n    pointer-events: none;\n\n    &,\n    .primary,\n    .secondary {\n      --color: ${colors.ELEMENT_TERTIARY};\n    }\n  }\n\n  [data-theme='dark'] & {\n    --color: ${colors.WHITE};\n\n    &:is(:active, [data-pressed]) {\n      --background-color: ${colors.DARK_ELEMENT_FOCUS};\n    }\n    &:is(:focus-visible, :hover, [data-hover]) {\n      --background-color: ${colors.DARK_ELEMENT_ACTIVE};\n    }\n\n    &:is(:active, :focus-visible, :hover, [data-active], [data-hover], [data-pressed]) {\n      .primary,\n      .secondary {\n        --color: ${colors.WHITE};\n      }\n    }\n\n    &:is([data-disabled]) {\n      &,\n      .primary,\n      .secondary {\n        --color: ${colors.DARK_ELEMENT_TERTIARY};\n      }\n    }\n  }\n`;\n\n/**\n * Menu title\n */\nexport const title = css`\n  ${h3};\n\n  margin-bottom: 12px;\n  margin-top: 8px;\n\n  [data-theme='dark'] & {\n    --color: ${colors.WHITE};\n  }\n`;\n","/**\n * Color palette.\n * @see http://veli.ee/colorpedia/\n */\nconst palette = {\n  //\n  black: '#000000',\n  //\n  blue: {\n    denim: '#184ece', // focus [dark]\n    dodger: '#3370ff', // focus\n    ebony: '#1f222f', // background / secondary [dark]\n    haiti: '#0f152e', // text\n    hawkes: '#ecf1fe', // secondary\n    oxford: '#3f485e', // active aka selection [dark]\n    ribbon: '#004bff', // primary\n    ribbon1: '#1d61ff', // notice\n    science: '#0041dd', // pressed\n    vulcan: '#131620', // background / primary [dark]\n  },\n  //\n  current: 'currentColor',\n  //\n  gray: {\n    botticelli: '#dbe4ee', // dividers and strokes\n    cadet: '#b4bac8', // tertiary\n    fiord: '#3b4463', // dividers and strokes [dark]\n    geyser: '#ced4e2', // disabled\n    porcelain: '#f6f7f8', // background / secondary\n    trout: '#545864', // disabled [dark]\n    waterloo: '#757c91', // tertiary [dark]\n  },\n  //\n  green: {\n    caribbean: '#07d094', // success\n  },\n  //\n  orange: {\n    amber: '#ffbe0b', // warning\n  },\n  //\n  red: {\n    radical: '#ff3b58', // error\n  },\n  //\n  transparent: 'transparent',\n  //\n  white: '#ffffff', // background / primary\n};\n\n/**\n * Accent colors.\n */\nconst accents = ((c) => {\n  return {\n    DANGER: c.red.radical,\n    NOTICE: c.blue.ribbon1,\n    SUCCESS: c.green.caribbean,\n    WARNING: c.orange.amber,\n  };\n})(palette);\n\n/**\n * Neutral colors.\n */\n// const neutrals = ((c) => {\n//   return {};\n// })(palette);\n\n/**\n * Token colors.\n */\nconst tokens = ((c) => {\n  return {\n    PRIMARY: c.blue.ribbon,\n    SECONDARY: c.blue.hawkes,\n    TERTIARY: c.gray.cadet,\n    BACKGROUND_PRIMARY: c.white,\n    BACKGROUND_SECONDARY: c.gray.porcelain,\n    ELEMENT_PRIMARY: c.blue.ribbon,\n    ELEMENT_SECONDARY: c.blue.hawkes,\n    ELEMENT_TERTIARY: c.gray.cadet,\n    ELEMENT_ACTIVE: c.blue.science,\n    ELEMENT_DISABLED: c.gray.geyser,\n    ELEMENT_FOCUS: c.blue.dodger,\n    STROKE: c.gray.botticelli,\n    TEXT_PRIMARY: c.blue.haiti,\n    TEXT_SECONDARY: c.blue.hawkes,\n    TEXT_TERTIARY: c.gray.cadet,\n\n    // Darth Vader\n    DARK_TERTIARY: c.gray.waterloo,\n    DARK_ELEMENT_TERTIARY: c.gray.waterloo,\n    DARK_BACKGROUND_PRIMARY: c.blue.vulcan,\n    DARK_BACKGROUND_SECONDARY: c.blue.ebony,\n    DARK_ELEMENT_ACTIVE: c.blue.oxford,\n    DARK_ELEMENT_DISABLED: c.gray.trout,\n    DARK_ELEMENT_FOCUS: c.blue.denim,\n    DARK_STROKE: c.gray.fiord,\n  };\n})(palette);\n\n/**\n * @deprecated\n */\nexport const colors = {\n  BLACK: palette.black,\n  CURRENT: palette.current,\n  TRANSPARENT: palette.transparent,\n  WHITE: palette.white,\n\n  ...accents,\n  // ...neutrals,\n  ...tokens,\n};\n\n// export const colors = Object.keys(COLORS).reduce((acc, value: string) => {\n//   return {\n//     ...acc,\n//     [value]: `var(--color-${value.toLowerCase().replace(/_/g, '-')}, ${COLORS[value]})`,\n//   };\n// }, {});\n","import { css } from '@emotion/react';\n\nimport { colors } from '../colors';\n\nexport const base = css`\n  --color: ${colors.TEXT_PRIMARY};\n  --font-family: 'Inter', sans-serif;\n  --font-size: ;\n  --font-weight: 400;\n  --letter-spacing: ;\n  --line-height: ;\n\n  box-sizing: border-box;\n  color: var(--color);\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  font-weight: var(--font-weight);\n  letter-spacing: var(--letter-spacing);\n  line-height: var(--line-height);\n`;\n\nconst heading = css`\n  ${base};\n\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n\n  margin: 0;\n`;\n\nexport const h1 = css`\n  ${heading};\n\n  --font-size: 18px;\n  --line-height: calc(24 / 18);\n`;\n\nexport const h2 = css`\n  ${heading};\n\n  --font-size: 16px;\n  --line-height: calc(24 / 16);\n`;\n\nexport const h3 = css`\n  ${heading};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n`;\n\nexport const h4 = css`\n  ${heading};\n\n  --font-size: 13px;\n  --line-height: calc(16 / 13);\n`;\n\nexport const h5 = css`\n  ${h4};\n\n  --font-weight: 600;\n`;\n\nexport const paragraph = css`\n  ${base};\n\n  --font-size: 13px;\n  --font-weight: 500;\n  --line-height: calc(16 / 13);\n`;\n\nexport const button = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 600;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n\n  text-decoration: none;\n`;\n\nexport const label = css`\n  ${base};\n\n  --font-size: 14px;\n  --font-weight: 700;\n  --letter-spacing: -0.01em;\n  --line-height: calc(16 / 14);\n`;\n\nexport const input = css`\n  ${base};\n\n  --font-size: 14px;\n  --line-height: calc(16 / 14);\n  --font-weight: 600;\n`;\n","import styled from '@emotion/styled';\nimport React, { ElementType, forwardRef, HTMLAttributes } from 'react';\n\nimport { divider } from './divider.styles';\n\nexport interface DividerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n  /**\n   * Direction\n   */\n  direction?: 'horizontal' | 'vertical';\n  /**\n   * Size\n   */\n  size?: string;\n  /**\n   * Space\n   */\n  space?: string;\n}\n\n/**\n * Divider.\n */\nexport const Divider = forwardRef<HTMLDivElement, DividerProps>(\n  (\n    { as = 'span', direction = 'vertical', size = '2px', space = '0', style, ...props },\n    ref\n  ): JSX.Element => {\n    return (\n      <Container\n        {...props}\n        as={as}\n        data-divider={direction}\n        ref={ref}\n        style={{ ['--size' as string]: size, ['--space' as string]: space, ...style }}\n      />\n    );\n  }\n);\n\nconst Container = styled.span`\n  ${divider};\n`;\n","import { css } from '@emotion/react';\n\nimport { colors } from '../../colors';\n\nexport const horizontal = css`\n  height: var(--size);\n  margin-inline: var(--space);\n`;\n\nexport const vertical = css`\n  margin-block: var(--space);\n  width: var(--size);\n`;\n\nexport const divider = css`\n  --color: ${colors.STROKE};\n  --size: 2px;\n  --space: 0;\n\n  background-color: var(--color);\n  border-radius: 1000px;\n  display: block;\n\n  &:is([data-divider='horizontal']) {\n    ${horizontal};\n  }\n  &:is([data-divider='vertical']) {\n    ${vertical};\n  }\n\n  [data-theme='dark'] & {\n    --color: ${colors.DARK_STROKE};\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport { divider } from './menu.styles';\n\nexport const MenuDivider = styled.div`\n  ${divider};\n`;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { HTMLAttributes } from 'react';\n\nimport { VariantType } from '../../types';\nimport { group, groupTitle } from './menu.styles';\n\nexport const MenuGroup: React.FC<HTMLAttributes<HTMLDivElement>> = (props): JSX.Element => (\n  <div css={group} data-menu=\"group\" {...props} />\n);\n\nexport interface MenuGroupTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Variant\n   */\n  variant?: VariantType;\n}\n\nexport const MenuGroupTitle: React.FC<MenuGroupTitleProps> = ({\n  children,\n  variant,\n  ...props\n}): JSX.Element => (\n  <h5 css={groupTitle} data-variant={variant || null} {...props}>\n    {children}\n  </h5>\n);\n","import styled from '@emotion/styled';\nimport React, { ElementType, forwardRef, HTMLAttributes } from 'react';\n\nimport { item } from './menu.styles';\n\nexport interface MenuItemProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n  /**\n   * Align along primary axis\n   */\n  justify?: boolean;\n  /**\n   * Theme\n   */\n  theme?: 'light' | 'dark';\n\n  /**\n   * State: Active\n   */\n  active?: boolean;\n  /**\n   * State: Disabled\n   */\n  disabled?: boolean;\n}\n\n/**\n * Context menu item\n */\nexport const MenuItem = forwardRef<HTMLButtonElement, MenuItemProps>(\n  ({ active, as = 'button', disabled, justify, theme, ...props }, ref): JSX.Element => {\n    const qa = {\n      'data-qa': 'menu-item',\n    };\n    return (\n      <Container\n        as={as}\n        data-active={active || null}\n        data-disabled={disabled || null}\n        data-justify={justify || null}\n        data-theme={theme || null}\n        disabled={as === 'button' ? !!disabled : undefined}\n        ref={ref}\n        type={as === 'button' ? 'button' : undefined}\n        {...qa}\n        {...props}\n      />\n    );\n  }\n);\n\nconst Container = styled.button`\n  ${item};\n`;\n","import styled from '@emotion/styled';\n\nimport { title } from './menu.styles';\n\nexport const MenuTitle = styled.h5`\n  ${title};\n`;\n"],"mappings":"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","names":["menu_exports","__export","Menu","MenuDivider","MenuGroup","MenuGroupTitle","MenuItem","MenuTitle","divider","group","groupTitle","item","menu","title","__toCommonJS","import_styled","import_react","import_react","palette","accents","c","tokens","colors","import_react","base","colors","heading","h1","h2","h3","h4","h5","paragraph","button","label","input","import_styled","import_react","import_react","horizontal","vertical","divider","colors","Divider","as","direction","size","space","style","props","ref","React","Container","styled","divider","menu","colors","divider","horizontal","group","groupTitle","h3","item","button","paragraph","title","Menu","active","justify","padding","size","theme","props","ref","qa","React","Container","styled","menu","import_styled","MenuDivider","styled","divider","import_react","MenuGroup","props","group","MenuGroupTitle","children","variant","groupTitle","import_styled","import_react","MenuItem","active","as","disabled","justify","theme","props","ref","React","Container","styled","item","import_styled","MenuTitle","styled","title"]}