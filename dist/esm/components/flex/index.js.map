{"version":3,"sources":["../../../../src/components/flex/flex.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport React, { ElementType, forwardRef, HTMLAttributes, ReactNode } from 'react';\n\nimport {\n  AlignmentFlexboxType,\n  AlignmentPrimaryType,\n  AlignmentSecondaryType,\n  AlignmentTertiaryType,\n} from '../../types';\n\nexport interface FlexProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * Alignment, secondary axis\n   */\n  align?: AlignmentSecondaryType | AlignmentFlexboxType;\n  /**\n   * Render as HTML element\n   */\n  as?: ElementType<any>;\n  /**\n   * Block or inline\n   */\n  block?: boolean;\n  /**\n   * Children\n   */\n  children: ReactNode;\n  /**\n   * Direction (default is `row`)\n   */\n  direction?: 'column' | 'column-reverse' | 'row' | 'row-reverse';\n  /**\n   * Gap\n   */\n  gap?: string;\n  /**\n   * Alignment, primary axis\n   */\n  justify?: AlignmentPrimaryType | AlignmentTertiaryType | AlignmentFlexboxType;\n  /**\n   * Wrap (default is `no-wrap`)\n   */\n  wrap?: boolean;\n}\n\n/**\n * Flexbox wrapper.\n */\nexport const Flex = forwardRef<HTMLDivElement, FlexProps>(\n  ({ align, as = 'div', block, direction, gap, justify, wrap, ...props }, ref): JSX.Element => {\n    const delegated = { align, block, direction, gap, justify, ...props };\n    return <Container as={as} data-wrap={wrap || null} ref={ref} {...delegated} />;\n  }\n);\n\nconst Container = styled.div<FlexProps>(\n  ({ align, block, direction, gap, justify }) => ({\n    alignItems: align,\n    display: `${block ? 'flex' : 'inline-flex'}`,\n    flexDirection: direction,\n    gap: gap,\n    justifyContent: justify,\n  }),\n  css`\n    &[data-wrap] {\n      flex-wrap: wrap;\n    }\n  `\n);\n"],"mappings":";2fAAA,qCACA,+BACA,sCA+CO,GAAM,GAAO,EAClB,CAAC,EAAuE,IAAqB,CAA5F,QAAE,SAAO,KAAK,MAAO,QAAO,YAAW,MAAK,UAAS,QAArD,EAA8D,IAA9D,EAA8D,CAA5D,QAAO,KAAY,QAAO,YAAW,MAAK,UAAS,SACpD,GAAM,GAAY,GAAE,QAAO,QAAO,YAAW,MAAK,WAAY,GAC9D,MAAO,iBAAC,EAAD,GAAW,GAAI,EAAI,YAAW,GAAQ,KAAM,IAAK,GAAS,MAI/D,EAAY,EAAO,IACvB,CAAC,CAAE,QAAO,QAAO,YAAW,MAAK,aAAe,EAC9C,WAAY,EACZ,QAAS,GAAG,EAAQ,OAAS,gBAC7B,cAAe,EACf,IAAK,EACL,eAAgB,IAElB;AAAA;AAAA;AAAA;","names":[]}