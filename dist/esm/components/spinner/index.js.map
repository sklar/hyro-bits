{"version":3,"sources":["../../../../src/components/spinner/spinner.tsx","../../../../src/constants.ts","../../../../src/components/spinner/spinner.styles.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport React, { forwardRef, HTMLAttributes, useEffect, useState } from 'react';\n\nimport { Size } from '../../constants';\nimport { SizeType } from '../../types';\nimport { spinner } from './spinner.styles';\n\nenum IconVariant {\n  BOLD = 'BOLD',\n  MINI = 'MINI',\n}\n\nconst Icon = {\n  [IconVariant.BOLD]: [\n    'M6.956 3.13a1.043 1.043 0 0 0 2.087 0V1.043a1.043 1.043 0 0 0-2.087 0V3.13z',\n    'M12.9 2.024a1.035 1.035 0 0 0-.737.305l-1.475 1.475a1.044 1.044 0 1 0 1.475 1.477l1.476-1.475a1.043 1.043 0 0 0-.739-1.782z',\n    'M16 8a1.043 1.043 0 0 0-1.044-1.043H12.87a1.043 1.043 0 1 0 0 2.087h2.087A1.043 1.043 0 0 0 16 8z',\n    'M10.816 10.787a1.044 1.044 0 0 0 0 1.475l1.477 1.476a1.046 1.046 0 0 0 1.48-1.477l-1.479-1.478a1.045 1.045 0 0 0-1.478.004z',\n    'M6.956 14.957a1.043 1.043 0 0 0 2.087 0v-2.088a1.043 1.043 0 0 0-2.087 0v2.088z',\n    'M4.492 10.451a1.036 1.036 0 0 0-.737.305l-1.477 1.476a1.043 1.043 0 0 0 1.479 1.472l1.476-1.476a1.043 1.043 0 0 0-.738-1.78l-.003.003z',\n    'M0 8a1.043 1.043 0 0 0 1.043 1.043H3.13a1.043 1.043 0 1 0 0-2.086H1.043A1.043 1.043 0 0 0 0 8z',\n    'M5.406 3.9 3.929 2.424a1.071 1.071 0 0 0-1.475 0 1.043 1.043 0 0 0 0 1.476L3.93 5.375a1.037 1.037 0 0 0 .738.305 1.043 1.043 0 0 0 .738-1.78z',\n  ],\n  [IconVariant.MINI]: [\n    'M7.217 4.348a.783.783 0 0 0 1.565 0V2.783a.783.783 0 1 0-1.565 0v1.565z',\n    'M11.675 3.518a.776.776 0 0 0-.553.229l-1.106 1.106a.782.782 0 1 0 1.107 1.107l1.106-1.106a.783.783 0 0 0-.554-1.336z',\n    'M14 8a.783.783 0 0 0-.783-.783h-1.565a.782.782 0 1 0 0 1.566h1.565A.783.783 0 0 0 14 8z',\n    'M10.112 10.09a.783.783 0 0 0 0 1.107l1.107 1.106a.784.784 0 0 0 1.111-1.107l-1.11-1.109a.782.782 0 0 0-1.108.003z',\n    'M7.217 13.217a.783.783 0 0 0 1.565 0v-1.565a.783.783 0 1 0-1.565 0v1.565z',\n    'M5.369 9.839a.776.776 0 0 0-.553.228l-1.107 1.107a.783.783 0 0 0 1.108 1.104l1.108-1.107a.783.783 0 0 0-.554-1.335l-.002.003z',\n    'M2 8a.783.783 0 0 0 .783.783h1.565a.783.783 0 0 0 0-1.566H2.783A.783.783 0 0 0 2 8z',\n    'M6.054 4.925 4.947 3.818a.804.804 0 0 0-1.107 0 .783.783 0 0 0 0 1.107L4.948 6.03a.777.777 0 0 0 .553.229.783.783 0 0 0 .553-1.335z',\n  ],\n} as const;\n\nexport interface SpinnerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Color\n   */\n  color?: string;\n  /**\n   * Duration\n   */\n  duration?: number;\n  /**\n   * Size\n   */\n  size?: SizeType;\n}\n\n/**\n * Spinner indicator.\n */\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n  ({ color = 'currentColor', duration = 600, size = 'sm', style, ...props }, ref): JSX.Element => {\n    const [icon, setIcon] = useState<string[]>([]);\n    const qa = {\n      'data-qa': 'spinner',\n    };\n\n    useEffect(() => {\n      if (size === Size.XSMALL) {\n        setIcon([...Icon[IconVariant.MINI]]);\n      } else {\n        setIcon([...Icon[IconVariant.BOLD]]);\n      }\n    }, [size]);\n\n    return (\n      <Container\n        data-size={size}\n        ref={ref}\n        {...qa}\n        {...props}\n        style={{\n          ['--color' as string]: color,\n          ['--duration' as string]: `${duration}ms`,\n          ...style,\n        }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\">\n          {icon.map((d, index) => (\n            <path\n              key={index}\n              d={d}\n              fill=\"currentColor\"\n              style={{ ['--index' as string]: index + 1 }}\n            />\n          ))}\n        </svg>\n      </Container>\n    );\n  }\n);\n\nconst Container = styled.span`\n  --segments: 8;\n\n  ${spinner};\n`;\n","export const Direction = {\n  NONE: 'None',\n  ASCENDING: 'Asc',\n  DESCENDING: 'Desc',\n} as const;\n\nexport const Size = {\n  XSMALL: 'xs',\n  SMALL: 'sm',\n  MEDIUM: 'md',\n  LARGE: 'lg',\n  XLARGE: 'xl',\n} as const;\n\nexport const Theme = {\n  NOTICE: 'notice',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  DANGER: 'danger',\n  DARK: 'dark',\n} as const;\n\nexport const Variant = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  TERTIARY: 'tertiary',\n} as const;\n","import { css, keyframes } from '@emotion/react';\n\nconst segmentAnimation = keyframes`\n  0%  { opacity: 0 }\n  100%  { opacity: 1 }\n`;\n\nexport const spinner = css`\n  --size: ;\n\n  aspect-ratio: 1;\n  color: var(--color);\n  display: inline-grid;\n  flex-shrink: 0;\n  place-content: center;\n  width: var(--size);\n\n  &[data-size='xs'],\n  &[data-size='sm'] {\n    --size: 16px;\n  }\n  &[data-size='md'] {\n    --size: 20px;\n  }\n  &[data-size='lg'] {\n    --size: 24px;\n  }\n  &[data-size='xl'] {\n    --size: 32px;\n  }\n\n  svg {\n    aspect-ratio: inherit;\n    display: block;\n    width: inherit;\n  }\n\n  path {\n    animation: ${segmentAnimation} var(--duration) infinite reverse steps(var(--segments));\n    animation-delay: calc((var(--index) - var(--segments)) * var(--duration) / var(--segments));\n  }\n`;\n"],"mappings":";AAAA,OAAOA,MAAY,kBACnB,OAAOC,GAAS,cAAAC,EAA4B,aAAAC,EAAW,YAAAC,MAAgB,QCKhE,IAAMC,EAAO,CAClB,OAAQ,KACR,MAAO,KACP,OAAQ,KACR,MAAO,KACP,OAAQ,IACV,ECZA,OAAS,OAAAC,EAAK,aAAAC,MAAiB,iBAE/B,IAAMC,EAAmBD;AAAA;AAAA;AAAA,EAKZE,EAAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA+BNE;AAAA;AAAA;EF1BjB,IAAME,EAAO,CACX,CAAC,QAAmB,CAClB,8EACA,8HACA,oGACA,8HACA,kFACA,yIACA,iGACA,+IACF,EACA,CAAC,QAAmB,CAClB,0EACA,uHACA,0FACA,oHACA,4EACA,gIACA,sFACA,qIACF,CACF,EAoBaC,EAAUC,EACrB,CAAC,CAAE,MAAAC,EAAQ,eAAgB,SAAAC,EAAW,IAAK,KAAAC,EAAO,KAAM,MAAAC,KAAUC,CAAM,EAAGC,IAAqB,CAC9F,GAAM,CAACC,EAAMC,CAAO,EAAIC,EAAmB,CAAC,CAAC,EACvCC,EAAK,CACT,UAAW,SACb,EAEA,OAAAC,EAAU,IAAM,CACVR,IAASS,EAAK,OAChBJ,EAAQ,CAAC,GAAGV,EAAK,OAAiB,CAAC,EAEnCU,EAAQ,CAAC,GAAGV,EAAK,OAAiB,CAAC,CAEvC,EAAG,CAACK,CAAI,CAAC,EAGPU,EAAA,cAACC,EAAA,CACC,YAAWX,EACX,IAAKG,EACJ,GAAGI,EACH,GAAGL,EACJ,MAAO,CACL,CAAC,WAAsBJ,EACvB,CAAC,cAAyB,GAAGC,MAC7B,GAAGE,CACL,GAEAS,EAAA,cAAC,OAAI,MAAM,6BAA6B,KAAK,OAAO,QAAQ,aACzDN,EAAK,IAAI,CAAC,EAAGQ,IACZF,EAAA,cAAC,QACC,IAAKE,EACL,EACA,KAAK,eACL,MAAO,CAAE,CAAC,WAAsBA,EAAQ,CAAE,EAC5C,CACD,CACH,CACF,CAEJ,CACF,EAEMD,EAAYE,EAAO;AAAA;AAAA;AAAA,IAGrBC;","names":["styled","React","forwardRef","useEffect","useState","Size","css","keyframes","segmentAnimation","spinner","Icon","Spinner","forwardRef","color","duration","size","style","props","ref","icon","setIcon","useState","qa","useEffect","Size","React","Container","index","styled","spinner"]}